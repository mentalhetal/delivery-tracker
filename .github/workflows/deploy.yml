name: CI/CD with Docker + Ansible

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: ap-northeast-2
  ECR_REPO: tracking-app
  ECR_URI: 122996776662.dkr.ecr.ap-northeast-2.amazonaws.com

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: SSH Key 설정
      run: |
        echo "${{ secrets.PRIVATE_KEY }}" > ~/.ssh/seoul.key.pem
        chmod 600 ~/.ssh/seoul.key.pem
    
    - name: AWS 로그인
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Docker Build & ECR Push
      run: |
        docker build -t $ECR_REPO ./app
        docker tag $ECR_REPO:latest $ECR_URI/$ECR_REPO:latest
        docker push $ECR_URI/$ECR_REPO:latest

    - name: Terraform Apply
      run: |
        cd terraform
        terraform init
        terraform apply -auto-approve

    - name: EC2 인벤토리 생성
      run: |
        aws ec2 describe-instances \
          --filters "Name=tag:Name,Values=tracking-ec2" \
          --query "Reservations[*].Instances[*].PrivateIpAddress" \
          --output text > ips.txt

        echo "[app_servers]" > ansible/inventory.ini
        cat ips.txt | while read ip; do echo "$ip ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/seoul.key.pem" >> ansible/inventory.ini; done

    - name: Ansible 실행
      run: |
        sudo apt update && sudo apt install -y ansible
        ansible-playbook -i ansible/inventory.ini ansible/playbook.yml
